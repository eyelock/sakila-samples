// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.eyelock.sakila.domain;

import java.util.Calendar;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import net.eyelock.sakila.domain.Film;
import net.eyelock.sakila.domain.Inventory;
import net.eyelock.sakila.domain.Rental;
import net.eyelock.sakila.domain.Store;
import org.springframework.format.annotation.DateTimeFormat;

privileged aspect Inventory_Roo_DbManaged {
    
    @OneToMany(mappedBy = "inventoryId", cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    private Set<Rental> Inventory.rentals;
    
    @ManyToOne
    @JoinColumn(name = "store_id", referencedColumnName = "store_id", nullable = false)
    private Store Inventory.storeId;
    
    @ManyToOne
    @JoinColumn(name = "film_id", referencedColumnName = "film_id", nullable = false)
    private Film Inventory.filmId;
    
    @Column(name = "last_update")
    @NotNull
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Inventory.lastUpdate;
    
    public Set<Rental> Inventory.getRentals() {
        return rentals;
    }
    
    public void Inventory.setRentals(Set<Rental> rentals) {
        this.rentals = rentals;
    }
    
    public Store Inventory.getStoreId() {
        return storeId;
    }
    
    public void Inventory.setStoreId(Store storeId) {
        this.storeId = storeId;
    }
    
    public Film Inventory.getFilmId() {
        return filmId;
    }
    
    public void Inventory.setFilmId(Film filmId) {
        this.filmId = filmId;
    }
    
    public Calendar Inventory.getLastUpdate() {
        return lastUpdate;
    }
    
    public void Inventory.setLastUpdate(Calendar lastUpdate) {
        this.lastUpdate = lastUpdate;
    }
    
}
