// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.eyelock.sakila.services;

import java.util.List;
import net.eyelock.sakila.domain.FilmActor;
import net.eyelock.sakila.domain.FilmActorPK;
import net.eyelock.sakila.repositories.FilmActorRepository;
import net.eyelock.sakila.services.FilmActorServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect FilmActorServiceImpl_Roo_Service {
    
    declare @type: FilmActorServiceImpl: @Service;
    
    declare @type: FilmActorServiceImpl: @Transactional;
    
    @Autowired
    FilmActorRepository FilmActorServiceImpl.filmActorRepository;
    
    public long FilmActorServiceImpl.countAllFilmActors() {
        return filmActorRepository.count();
    }
    
    public void FilmActorServiceImpl.deleteFilmActor(FilmActor filmActor) {
        filmActorRepository.delete(filmActor);
    }
    
    public FilmActor FilmActorServiceImpl.findFilmActor(FilmActorPK id) {
        return filmActorRepository.findOne(id);
    }
    
    public List<FilmActor> FilmActorServiceImpl.findAllFilmActors() {
        return filmActorRepository.findAll();
    }
    
    public List<FilmActor> FilmActorServiceImpl.findFilmActorEntries(int firstResult, int maxResults) {
        return filmActorRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void FilmActorServiceImpl.saveFilmActor(FilmActor filmActor) {
        filmActorRepository.save(filmActor);
    }
    
    public FilmActor FilmActorServiceImpl.updateFilmActor(FilmActor filmActor) {
        return filmActorRepository.save(filmActor);
    }
    
}
